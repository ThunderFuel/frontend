/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.38.1
  Forc version: 0.35.5
  Fuel-Core version: 0.17.3
*/

import { Interface, Contract } from "fuels";
import type { Provider, Account, AbstractAddress } from "fuels";
import type { ThunderExchangeAbi, ThunderExchangeAbiInterface } from "../ThunderExchangeAbi";

const _abi = {
  types: [
    {
      typeId: 0,
      type: "()",
      components: [],
      typeParameters: null,
    },
    {
      typeId: 1,
      type: "b256",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 2,
      type: "enum Identity",
      components: [
        {
          name: "Address",
          type: 22,
          typeArguments: null,
        },
        {
          name: "ContractId",
          type: 23,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 3,
      type: "enum Option",
      components: [
        {
          name: "None",
          type: 0,
          typeArguments: null,
        },
        {
          name: "Some",
          type: 5,
          typeArguments: null,
        },
      ],
      typeParameters: [5],
    },
    {
      typeId: 4,
      type: "enum Side",
      components: [
        {
          name: "Buy",
          type: 0,
          typeArguments: null,
        },
        {
          name: "Sell",
          type: 0,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 5,
      type: "generic T",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 6,
      type: "raw untyped ptr",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 7,
      type: "str[19]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 8,
      type: "str[20]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 9,
      type: "str[24]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 10,
      type: "str[25]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 11,
      type: "str[26]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 12,
      type: "str[27]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 13,
      type: "str[29]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 14,
      type: "str[30]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 15,
      type: "str[31]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 16,
      type: "str[34]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 17,
      type: "str[36]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 18,
      type: "str[37]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 19,
      type: "str[41]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 20,
      type: "str[42]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 21,
      type: "str[8]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 22,
      type: "struct Address",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 23,
      type: "struct ContractId",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 24,
      type: "struct ExtraParams",
      components: [
        {
          name: "extra_address_param",
          type: 22,
          typeArguments: null,
        },
        {
          name: "extra_contract_param",
          type: 23,
          typeArguments: null,
        },
        {
          name: "extra_u64_param",
          type: 32,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 25,
      type: "struct MakerOrderInput",
      components: [
        {
          name: "side",
          type: 4,
          typeArguments: null,
        },
        {
          name: "maker",
          type: 22,
          typeArguments: null,
        },
        {
          name: "collection",
          type: 23,
          typeArguments: null,
        },
        {
          name: "token_id",
          type: 32,
          typeArguments: null,
        },
        {
          name: "price",
          type: 32,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 32,
          typeArguments: null,
        },
        {
          name: "nonce",
          type: 32,
          typeArguments: null,
        },
        {
          name: "strategy",
          type: 23,
          typeArguments: null,
        },
        {
          name: "payment_asset",
          type: 23,
          typeArguments: null,
        },
        {
          name: "expiration_range",
          type: 32,
          typeArguments: null,
        },
        {
          name: "extra_params",
          type: 24,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 26,
      type: "struct OwnershipRenounced",
      components: [
        {
          name: "previous_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 27,
      type: "struct OwnershipSet",
      components: [
        {
          name: "new_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 28,
      type: "struct OwnershipTransferred",
      components: [
        {
          name: "new_owner",
          type: 2,
          typeArguments: null,
        },
        {
          name: "previous_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 29,
      type: "struct RawVec",
      components: [
        {
          name: "ptr",
          type: 6,
          typeArguments: null,
        },
        {
          name: "cap",
          type: 32,
          typeArguments: null,
        },
      ],
      typeParameters: [5],
    },
    {
      typeId: 30,
      type: "struct TakerOrder",
      components: [
        {
          name: "side",
          type: 4,
          typeArguments: null,
        },
        {
          name: "taker",
          type: 22,
          typeArguments: null,
        },
        {
          name: "maker",
          type: 22,
          typeArguments: null,
        },
        {
          name: "nonce",
          type: 32,
          typeArguments: null,
        },
        {
          name: "price",
          type: 32,
          typeArguments: null,
        },
        {
          name: "token_id",
          type: 32,
          typeArguments: null,
        },
        {
          name: "collection",
          type: 23,
          typeArguments: null,
        },
        {
          name: "strategy",
          type: 23,
          typeArguments: null,
        },
        {
          name: "extra_params",
          type: 24,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 31,
      type: "struct Vec",
      components: [
        {
          name: "buf",
          type: 29,
          typeArguments: [
            {
              name: "",
              type: 5,
              typeArguments: null,
            },
          ],
        },
        {
          name: "len",
          type: 32,
          typeArguments: null,
        },
      ],
      typeParameters: [5],
    },
    {
      typeId: 32,
      type: "u64",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "orders",
          type: 31,
          typeArguments: [
            {
              name: "",
              type: 30,
              typeArguments: null,
            },
          ],
        },
      ],
      name: "bulk_execute_order",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "order_inputs",
          type: 31,
          typeArguments: [
            {
              name: "",
              type: 25,
              typeArguments: null,
            },
          ],
        },
      ],
      name: "bulk_place_order",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "strategy",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "cancel_all_orders",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: null,
    },
    {
      inputs: [
        {
          name: "strategy",
          type: 23,
          typeArguments: null,
        },
        {
          name: "side",
          type: 4,
          typeArguments: null,
        },
      ],
      name: "cancel_all_orders_by_side",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: null,
    },
    {
      inputs: [
        {
          name: "strategy",
          type: 23,
          typeArguments: null,
        },
        {
          name: "nonce",
          type: 32,
          typeArguments: null,
        },
        {
          name: "side",
          type: 4,
          typeArguments: null,
        },
      ],
      name: "cancel_order",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "order",
          type: 30,
          typeArguments: null,
        },
      ],
      name: "execute_order",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "payable",
          arguments: [],
        },
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_asset_manager",
      output: {
        name: "",
        type: 23,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_execution_manager",
      output: {
        name: "",
        type: 23,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_pool",
      output: {
        name: "",
        type: 23,
        typeArguments: null,
      },
      attributes: [
        {
          name: "doc-comment",
          arguments: [" Getters ///"],
        },
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_protocol_fee_recipient",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_royalty_manager",
      output: {
        name: "",
        type: 23,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_transfer_selector",
      output: {
        name: "",
        type: 23,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "initialize",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [],
      name: "owner",
      output: {
        name: "",
        type: 3,
        typeArguments: [
          {
            name: "",
            type: 2,
            typeArguments: null,
          },
        ],
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
        {
          name: "doc-comment",
          arguments: [" Ownable ///"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "order_input",
          type: 25,
          typeArguments: null,
        },
      ],
      name: "place_order",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "renounce_ownership",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "asset_manager",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "set_asset_manager",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "execution_manager",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "set_execution_manager",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "pool",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "set_pool",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "doc-comment",
          arguments: [" Setters ///"],
        },
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "protocol_fee_recipient",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "set_protocol_fee_recipient",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "royalty_manager",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "set_royalty_manager",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "transfer_selector",
          type: 23,
          typeArguments: null,
        },
      ],
      name: "set_transfer_selector",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "new_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "transfer_ownership",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: 0,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 1,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 2,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 3,
      loggedType: {
        name: "",
        type: 15,
        typeArguments: null,
      },
    },
    {
      logId: 4,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 5,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 6,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 7,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 8,
      loggedType: {
        name: "",
        type: 16,
        typeArguments: null,
      },
    },
    {
      logId: 9,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: null,
      },
    },
    {
      logId: 10,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 11,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 12,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 13,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 14,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 15,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 16,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 17,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 18,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 19,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 20,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 21,
      loggedType: {
        name: "",
        type: 15,
        typeArguments: null,
      },
    },
    {
      logId: 22,
      loggedType: {
        name: "",
        type: 17,
        typeArguments: null,
      },
    },
    {
      logId: 23,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 24,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 25,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 26,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 27,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: null,
      },
    },
    {
      logId: 28,
      loggedType: {
        name: "",
        type: 20,
        typeArguments: null,
      },
    },
    {
      logId: 29,
      loggedType: {
        name: "",
        type: 19,
        typeArguments: null,
      },
    },
    {
      logId: 30,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 31,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 32,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 33,
      loggedType: {
        name: "",
        type: 15,
        typeArguments: null,
      },
    },
    {
      logId: 34,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 35,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 36,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 37,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 38,
      loggedType: {
        name: "",
        type: 16,
        typeArguments: null,
      },
    },
    {
      logId: 39,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: null,
      },
    },
    {
      logId: 40,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 41,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 42,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 43,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 44,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 45,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: null,
      },
    },
    {
      logId: 46,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: null,
      },
    },
    {
      logId: 47,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 48,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 49,
      loggedType: {
        name: "",
        type: 7,
        typeArguments: null,
      },
    },
    {
      logId: 50,
      loggedType: {
        name: "",
        type: 27,
        typeArguments: [],
      },
    },
    {
      logId: 51,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: null,
      },
    },
    {
      logId: 52,
      loggedType: {
        name: "",
        type: 15,
        typeArguments: null,
      },
    },
    {
      logId: 53,
      loggedType: {
        name: "",
        type: 17,
        typeArguments: null,
      },
    },
    {
      logId: 54,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 55,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      logId: 56,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: null,
      },
    },
    {
      logId: 57,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: null,
      },
    },
    {
      logId: 58,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: null,
      },
    },
    {
      logId: 59,
      loggedType: {
        name: "",
        type: 20,
        typeArguments: null,
      },
    },
    {
      logId: 60,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 61,
      loggedType: {
        name: "",
        type: 26,
        typeArguments: [],
      },
    },
    {
      logId: 62,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 63,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 64,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 65,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 66,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 67,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 68,
      loggedType: {
        name: "",
        type: 21,
        typeArguments: null,
      },
    },
    {
      logId: 69,
      loggedType: {
        name: "",
        type: 28,
        typeArguments: [],
      },
    },
  ],
  messagesTypes: [],
  configurables: [],
};

export class ThunderExchangeAbi__factory {
  static readonly abi = _abi;
  static createInterface(): ThunderExchangeAbiInterface {
    return new Interface(_abi) as unknown as ThunderExchangeAbiInterface;
  }
  static connect(id: string | AbstractAddress, accountOrProvider: Account | Provider): ThunderExchangeAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as ThunderExchangeAbi;
  }
}
